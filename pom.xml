<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.lsst</groupId>
        <artifactId>org-lsst-ccs-parent</artifactId>
        <version>3.0.16</version>
        <relativePath />
    </parent>

    <groupId>org.lsst</groupId>
    <artifactId>CCSWebTrending</artifactId>
    <version>2.2-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>CCSWebTrending</name>

    <repositories>
        <repository>
            <id>lsst-maven2-public</id>
            <name>LSST Maven 2 central repository</name>
            <url>https://repo-nexus.lsst.org/nexus/content/groups/ccs-maven2-public/</url>
        </repository>
    </repositories>

    <scm>
        <url>https://github.com/lsst-camera-ccs/CCSWebTrending</url>
        <connection>scm:git:git://github.com/lsst-camera-ccs/CCSWebTrending.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/lsst-camera-ccs/CCSWebTrending.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <site>
            <id>lsst-maven2-site</id>
            <name>LSST Maven2 central site repository</name>
            <url>dav:${org.lsst.ccs.site.url}</url>
        </site>
    </distributionManagement>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <dependencies>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-jdk-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.55</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>npm run-script rollup</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run-script rollup</arguments>
                        </configuration>                    
                    </execution>
                    <execution>
                        <id>npm run-script rollup-builder</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run-script rollup-builder</arguments>
                        </configuration>                    
                    </execution>
                </executions>
                <configuration>
                    <nodeVersion>v12.16.2</nodeVersion>
                    <workingDirectory>${basedir}/target/frontendStagingDir</workingDirectory>
                    <installDirectory>${basedir}/target/frontendStagingDir</installDirectory>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <!-- 
                        Copy of the /frontendResources directory, coming from GIT, in /target directory
                        executed before the compiling and build of frontend resources
                        That dir will be the working directory of npm, bower, grunt
                        in order to avoid the creation of the direcotries node, node_modules, bower_components, ...
                        (they may be committed in repository)
                    -->
                    <execution>
                        <id>copy-frontendResources-toStagingDir-beforeBuild</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/frontendStagingDir</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>${basedir}/src/main/frontend</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>              
                        </configuration>            
                    </execution>
                    <!-- 
                        Copy of the /frontendResourcesStagingDir directory in /target/ directory
                        executed after build of frontend resources and before the war pachage creation
                        it contains the output of npm install execution
                    -->
                    <execution>
                        <id>copy-frontendResources-afterBuild</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/${project.artifactId}-${project.version}/</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>${basedir}/target/frontendStagingDir/out/</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>              
                        </configuration>            
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <jersey.version>2.22.2</jersey.version>
    </properties>
</project>
